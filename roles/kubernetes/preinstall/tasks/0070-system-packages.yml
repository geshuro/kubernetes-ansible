---
- name: Actualizar la caché de administración de paquetes (zypper) - SUSE
  command: zypper -n --gpg-auto-import-keys ref
  register: make_cache_output
  until: make_cache_output is succeeded
  retries: 4
  delay: "{{ retry_stagger | random + 3 }}"
  when:
    - ansible_pkg_mgr == 'zypper'
  tags: bootstrap-os

- name: Actualizar la caché de administración de paquetes (APT)
  apt:
    update_cache: yes
    cache_valid_time: 3600
  when: ansible_os_family == "Debian"
  tags:
    - bootstrap-os

- name: Eliminar el archivo de repositorio de Docker heredado
  file:
    path: "{{ yum_repo_dir }}/docker.repo"
    state: absent
  when:
    - ansible_distribution in ["CentOS","RedHat"]
    - not is_fedora_coreos

- name: Instalar python-dnf para las últimas versiones de RedHat
  command: dnf install -y python-dnf yum
  register: dnf_task_result
  until: dnf_task_result is succeeded
  retries: 4
  delay: "{{ retry_stagger | random + 3 }}"
  when:
    - ansible_distribution == "Fedora"
    - ansible_distribution_major_version|int > 21
    - ansible_distribution_major_version|int <= 29
    - not is_fedora_coreos
  changed_when: False
  tags:
    - bootstrap-os

- name: Instalar python3-dnf para las últimas versiones de RedHat
  command: dnf install -y python3-dnf
  register: dnf_task_result
  until: dnf_task_result is succeeded
  retries: 4
  delay: "{{ retry_stagger | random + 3 }}"
  when:
    - ansible_distribution == "Fedora"
    - ansible_distribution_major_version|int >= 30
    - not is_fedora_coreos
  changed_when: False
  tags:
    - bootstrap-os

- name: Instalar epel-release en RedHat/CentOS
  yum:
    name: epel-release
    state: present
  when:
    - ansible_distribution in ["CentOS","RedHat"]
    - not is_fedora_coreos
    - epel_enabled|bool
  tags:
    - bootstrap-os

- name: Actualizar common_required_pkgs con ipvsadm cuando kube_proxy_mode es ipvs
  set_fact:
    common_required_pkgs: "{{ common_required_pkgs|default([]) + ['ipvsadm', 'ipset'] }}"
  when: kube_proxy_mode == 'ipvs'

- name: Instalar paquetes requeridos
  action:
    module: "{{ ansible_pkg_mgr }}"
    name: "{{ required_pkgs | default([]) | union(common_required_pkgs|default([])) }}"
    state: latest
  register: pkgs_task_result
  until: pkgs_task_result is succeeded
  retries: 4
  delay: "{{ retry_stagger | random + 3 }}"
  when: not is_fedora_coreos
  tags:
    - bootstrap-os